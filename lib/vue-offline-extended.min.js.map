{"version":3,"file":"vue-offline-extended.min.js","mappings":"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","sources":["webpack://vue-offline-extended/webpack/universalModuleDefinition","webpack://vue-offline-extended/./node_modules/localforage-getitems/dist/localforage-getitems.js","webpack://vue-offline-extended/./node_modules/localforage/dist/localforage.js","webpack://vue-offline-extended/webpack/bootstrap","webpack://vue-offline-extended/webpack/runtime/compat get default export","webpack://vue-offline-extended/webpack/runtime/define property getters","webpack://vue-offline-extended/webpack/runtime/global","webpack://vue-offline-extended/webpack/runtime/hasOwnProperty shorthand","webpack://vue-offline-extended/webpack/runtime/make namespace object","webpack://vue-offline-extended/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-offline-extended\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-offline-extended\"] = factory();\n\telse\n\t\troot[\"vue-offline-extended\"] = factory();\n})(self, function() {\nreturn ","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('localforage')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'localforage'], factory) :\n    (factory((global.localforageGetItems = global.localforageGetItems || {}),global.localforage));\n}(this, (function (exports,localforage) { 'use strict';\n\nlocalforage = 'default' in localforage ? localforage['default'] : localforage;\n\nfunction getSerializerPromise(localForageInstance) {\n    if (getSerializerPromise.result) {\n        return getSerializerPromise.result;\n    }\n    if (!localForageInstance || typeof localForageInstance.getSerializer !== 'function') {\n        return Promise.reject(new Error('localforage.getSerializer() was not available! ' + 'localforage v1.4+ is required!'));\n    }\n    getSerializerPromise.result = localForageInstance.getSerializer();\n    return getSerializerPromise.result;\n}\n\n\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n    return promise;\n}\n\nfunction getItemKeyValue(key, callback) {\n    var localforageInstance = this;\n    var promise = localforageInstance.getItem(key).then(function (value) {\n        return {\n            key: key,\n            value: value\n        };\n    });\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction getItemsGeneric(keys /*, callback*/) {\n    var localforageInstance = this;\n    var promise = new Promise(function (resolve, reject) {\n        var itemPromises = [];\n\n        for (var i = 0, len = keys.length; i < len; i++) {\n            itemPromises.push(getItemKeyValue.call(localforageInstance, keys[i]));\n        }\n\n        Promise.all(itemPromises).then(function (keyValuePairs) {\n            var result = {};\n            for (var i = 0, len = keyValuePairs.length; i < len; i++) {\n                var keyValuePair = keyValuePairs[i];\n\n                result[keyValuePair.key] = keyValuePair.value;\n            }\n            resolve(result);\n        }).catch(reject);\n    });\n    return promise;\n}\n\n\n\n\n\nfunction getAllItemsUsingIterate() {\n    var localforageInstance = this;\n    var accumulator = {};\n    return localforageInstance.iterate(function (value, key /*, iterationNumber*/) {\n        accumulator[key] = value;\n    }).then(function () {\n        return accumulator;\n    });\n}\n\nfunction getIDBKeyRange() {\n    /* global IDBKeyRange, webkitIDBKeyRange, mozIDBKeyRange */\n    if (typeof IDBKeyRange !== 'undefined') {\n        return IDBKeyRange;\n    }\n    if (typeof webkitIDBKeyRange !== 'undefined') {\n        return webkitIDBKeyRange;\n    }\n    if (typeof mozIDBKeyRange !== 'undefined') {\n        return mozIDBKeyRange;\n    }\n}\n\nvar idbKeyRange = getIDBKeyRange();\n\nfunction getItemsIndexedDB(keys /*, callback*/) {\n    keys = keys.slice();\n    var localforageInstance = this;\n    function comparer(a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n\n    var promise = new Promise(function (resolve, reject) {\n        localforageInstance.ready().then(function () {\n            // Thanks https://hacks.mozilla.org/2014/06/breaking-the-borders-of-indexeddb/\n            var dbInfo = localforageInstance._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var set = keys.sort(comparer);\n\n            var keyRangeValue = idbKeyRange.bound(keys[0], keys[keys.length - 1], false, false);\n            var req = store.openCursor(keyRangeValue);\n            var result = {};\n            var i = 0;\n\n            req.onsuccess = function () /*event*/{\n                var cursor = req.result; // event.target.result;\n\n                if (!cursor) {\n                    resolve(result);\n                    return;\n                }\n\n                var key = cursor.key;\n\n                while (key > set[i]) {\n\n                    // The cursor has passed beyond this key. Check next.\n                    i++;\n\n                    if (i === set.length) {\n                        // There is no next. Stop searching.\n                        resolve(result);\n                        return;\n                    }\n                }\n\n                if (key === set[i]) {\n                    // The current cursor value should be included and we should continue\n                    // a single step in case next item has the same key or possibly our\n                    // next key in set.\n                    var value = cursor.value;\n                    if (value === undefined) {\n                        value = null;\n                    }\n\n                    result[key] = value;\n                    // onfound(cursor.value);\n                    cursor.continue();\n                } else {\n                    // cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.\n                    cursor.continue(set[i]);\n                }\n            };\n\n            req.onerror = function () /*event*/{\n                reject(req.error);\n            };\n        }).catch(reject);\n    });\n    return promise;\n}\n\nfunction getItemsWebsql(keys /*, callback*/) {\n    var localforageInstance = this;\n    var promise = new Promise(function (resolve, reject) {\n        localforageInstance.ready().then(function () {\n            return getSerializerPromise(localforageInstance);\n        }).then(function (serializer) {\n            var dbInfo = localforageInstance._dbInfo;\n            dbInfo.db.transaction(function (t) {\n\n                var queryParts = new Array(keys.length);\n                for (var i = 0, len = keys.length; i < len; i++) {\n                    queryParts[i] = '?';\n                }\n\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE (key IN (' + queryParts.join(',') + '))', keys, function (t, results) {\n\n                    var result = {};\n\n                    var rows = results.rows;\n                    for (var i = 0, len = rows.length; i < len; i++) {\n                        var item = rows.item(i);\n                        var value = item.value;\n\n                        // Check to see if this is serialized content we need to\n                        // unpack.\n                        if (value) {\n                            value = serializer.deserialize(value);\n                        }\n\n                        result[item.key] = value;\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        }).catch(reject);\n    });\n    return promise;\n}\n\nfunction localforageGetItems(keys, callback) {\n    var localforageInstance = this;\n\n    var promise;\n    if (!arguments.length || keys === null) {\n        promise = getAllItemsUsingIterate.apply(localforageInstance);\n    } else {\n        var currentDriver = localforageInstance.driver();\n        if (currentDriver === localforageInstance.INDEXEDDB) {\n            promise = getItemsIndexedDB.apply(localforageInstance, arguments);\n        } else if (currentDriver === localforageInstance.WEBSQL) {\n            promise = getItemsWebsql.apply(localforageInstance, arguments);\n        } else {\n            promise = getItemsGeneric.apply(localforageInstance, arguments);\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction extendPrototype(localforage$$1) {\n    var localforagePrototype = Object.getPrototypeOf(localforage$$1);\n    if (localforagePrototype) {\n        localforagePrototype.getItems = localforageGetItems;\n        localforagePrototype.getItems.indexedDB = function () {\n            return getItemsIndexedDB.apply(this, arguments);\n        };\n        localforagePrototype.getItems.websql = function () {\n            return getItemsWebsql.apply(this, arguments);\n        };\n        localforagePrototype.getItems.generic = function () {\n            return getItemsGeneric.apply(this, arguments);\n        };\n    }\n}\n\nvar extendPrototypeResult = extendPrototype(localforage);\n\nexports.localforageGetItems = localforageGetItems;\nexports.extendPrototype = extendPrototype;\nexports.extendPrototypeResult = extendPrototypeResult;\nexports.getItemsGeneric = getItemsGeneric;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import localforage from 'localforage';\nimport { extendPrototype } from 'localforage-getitems';\n\n/* ----------------------- Register modules ------------------------ */\nextendPrototype(localforage);\n\n/* ----------------------- Mixin ------------------------ */\n\n/** This mixin adds:\n * - `isOnline`, `isOffline` data properties\n * - `online`, `offline` in-component events\n * */\nexport const VueOfflineMixin = {\n  data() {\n    return {\n      isOnline: false,\n      isOffline: false,\n      showOnline: false,\n    };\n  },\n  mounted() {\n    if (typeof window !== 'undefined') {\n      navigator.onLine ? (this.isOnline = true) : (this.isOffline = true);\n\n      const onlineHandler = () => {\n        this.$emit('online');\n        this.isOnline = true;\n        this.isOffline = false;\n      };\n\n      const offlineHandler = () => {\n        this.$emit('offline');\n        this.isOffline = true;\n        this.isOnline = false;\n      };\n\n      window.addEventListener('online', onlineHandler);\n      window.addEventListener('offline', offlineHandler);\n\n      this.$once('hook:beforeDestroy', () => {\n        window.removeEventListener('online', onlineHandler);\n        window.removeEventListener('offline', offlineHandler);\n      });\n    }\n  },\n  watch: {\n    isOffline(status) {\n      if (!status) {\n        this.showOnline = true;\n        setTimeout(() => (this.showOnline = false), 3000);\n      }\n    },\n  },\n};\n\n/* ----------------------- Storage ------------------------ */\n\nexport const VueOfflineStorage = {\n  init(options = {}) {\n    const localforageInstances = localforage.createInstance(options);\n\n    if (!options.instances) {\n      return localforageInstances;\n    }\n\n    for (const instance of options.instances) {\n      const name = instance.storeName || instance.name;\n\n      if (!name) {\n        continue;\n      }\n\n      localforageInstances[name] = localforage.createInstance(instance);\n    }\n    return localforageInstances;\n  },\n};\n\n/* ----------------------- Plugin ------------------------ */\n\n/** Registers VueOfflineMixin in whole application giving you access to:\n * - isOnline, isOffline data properties\n * - online, offline in-component events\n */\nexport const VueOfflinePlugin = {\n  install(Vue, options = {}) {\n    const defaultOptions = {\n      mixin: true,\n      storage: {},\n    };\n\n    const pluginOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n    if (pluginOptions.storage)\n      Vue.$offlineStorage = Vue.prototype.$offlineStorage = VueOfflineStorage.init(options.storage);\n      Vue.prototype.$offlineStorage.createInstance = (instance) => {\n        const name = instance.storeName || instance.name\n        Vue.prototype.$offlineStorage[name] = localforage.createInstance(instance);\n      }\n    if (pluginOptions.mixin) Vue.mixin(VueOfflineMixin);\n  },\n};\n\nexport default VueOfflinePlugin;\n"],"names":["root","factory","exports","module","define","amd","self","localforage","getSerializerPromise","localForageInstance","result","getSerializer","Promise","reject","Error","executeCallback","promise","callback","then","error","getItemKeyValue","key","this","getItem","value","getItemsGeneric","keys","localforageInstance","resolve","itemPromises","i","len","length","push","call","all","keyValuePairs","keyValuePair","catch","getAllItemsUsingIterate","accumulator","iterate","idbKeyRange","IDBKeyRange","webkitIDBKeyRange","mozIDBKeyRange","getItemsIndexedDB","slice","comparer","a","b","ready","dbInfo","_dbInfo","store","db","transaction","storeName","objectStore","set","sort","keyRangeValue","bound","req","openCursor","onsuccess","cursor","undefined","continue","onerror","getItemsWebsql","serializer","t","queryParts","Array","executeSql","join","results","rows","item","deserialize","localforageGetItems","arguments","currentDriver","driver","INDEXEDDB","apply","WEBSQL","extendPrototype","localforage$$1","localforagePrototype","Object","getPrototypeOf","getItems","indexedDB","websql","generic","extendPrototypeResult","defineProperty","e","n","r","s","o","u","f","code","l","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","task","g","window","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","getThen","obj","thenable","onError","onSuccess","tryCatch","status","out","prototype","constructor","reason","iterable","toString","values","resolved","allResolver","outValue","race","response","_typeof","Symbol","iterator","idb","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupport","txn","blob","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","oldVersion","ex","newVersion","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","initPromises","ignoreErrors","j","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","isIndexedDBValid","iterationNumber","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","removeItem","clear","count","advanced","openKeyCursor","advance","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","webSQLStorage","dbInfoPromise","description","size","c","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","callWhenReady","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","enumerable","globalThis","Function","prop","toStringTag","VueOfflineMixin","isOnline","isOffline","showOnline","mounted","onLine","onlineHandler","$emit","offlineHandler","addEventListener","$once","removeEventListener","watch","VueOfflineStorage","init","localforageInstances","instances","VueOfflinePlugin","install","Vue","defaultOptions","mixin","storage","pluginOptions","$offlineStorage"],"sourceRoot":""}